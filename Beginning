import random
import math 
def Intro():
    print("Welcome to the game Mindgames.\n In this game you are trapped in your mind.\n\n To escape your mind, talk to the people around the town in order to discover the objective.\n")
    print("You wake up in a place you have never seen.\n When you look around, the barren room has only the basics: A bed, a window, and a wardrobe. To the right of you there seems to be a strange note with the words 'Come see me at my house.'")
    print("Walking outside of the room you realize you are in an Inn.\n Walking outside of the building you see the sign 'Welcome to Grovertown Inn.'") 
    print("When you look around, you realize you're in a small town with a couple of buildings around you.\n To the left there is a Tavern. To the right seems to be street vendors. To the south there is a street.")

def man_conversation1():
    print("Old Man: Welcome to the town of Grovertown. This town has been quite empty for the last 3 years and I seem to be the last one left here. Why are you here?")
    print("\nYou: I don't really know why I am here, I just woke up in the Inn. Is there a way to get out?\n\nOld Man: If you really want to leave I can help you, but I'll need something from you.")
    print("\nYou: And that is?\n\nOld Man: I'll need four things. The first one is a feather, then I need a sycamore seed, a shell, and a piece of volcanic rock.")
    print("\nYou: I guess I can help you.\n\nOld Man: Then you'll need this key. Take it, you'll know what to do with it once you go to sleep.")
    print("\nThe old man gives you a key with a metal pendant in the shape of a cloud in the middle. When you step outside of the Old Man's house, it has already become night. You decide to go back to the Inn where you fall asleep.")

def man_conversation2():
    print("Old Man: Welcome back. I assume you have collected all of the keys?")
    print("\nYou: I have, although ")

def town_movement(move, row, column):
    town_map = [['Tavern. A dark building with a wide door. You try to open the door, but it is locked. Down is the Blacksmith, and right is the Inn.',' Grovertown Inn. A one-bedroom building with a sign over it. This is where you woke up. To the left is the Tavern, to the right is the Market, and down is a Street.','Market. An empty yet colorful place. All street vendor stalls are empty. To the left is the Inn, and down is the Townhall.'],
            ['Blacksmith. A smaller building with large barn doors that are closed. To the right is the main street, and down is a smaller house.',' Street. A cobblestone road through the middle of town. Up is the inn, Left is the Blacksmith, right is the Townhall, and Down is the street.','Townhall. It is the biggest building in the town, however, the door is also locked. Up is the Market, left is the street, and down is a small house.'],
            ['House of an old man. You knock on the front door and hear a voice yell from inside, "Come inside." You walk inside where you see a man with grey hair sitting on a couch.',' Street. A continuation of the main street. Up is the street, left is a small house, and right is another small house.','Smaller house. You try knocking on the door but it is locked.']]
    position = town_map[row][column]
    if(move == "L" and column > 0):
        column -= 1
    elif(move == "R" and column < len(town_map[0]) - 1):
        column += 1
    elif(move == "D" and row > 0):
        row -= 1 
    elif(move == "U" and row < len(town_map) - 1):
        row += 1
    position = town_map[row][column]
    print("\nYou are now at The" , position, "\n")

def fire_map(fkey, row=1, column=1):
    fire_map =[['Nothing is here', 'A red gate with a big number 1 on it.', 'Nothing is here.']
              ['A red gate with a big number 2 on it.', 'Main area.', 'A red gate with a big number 4 on it.']
              ['Unavailable to go here', 'A red with a big number 3 on it.', 'Nothing is here']]
    position = fire_map[row][column]
    while(position != fire_map[1][0]):
        move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
        if(move == "L" and column > 0):
            column -= 1
        elif(move == "R" and column < len(fire_map[0] - 1)):
            column += 1
        elif(move == "D" and row > 0):
            row += 1
        elif(move == "U" and row < len(fire_map) - 1):
            row += 1
        position = water_map[row][column]
        print("\nYou are now at" , position , "\n")
    game1()
    print("You have completed puzzle 1 and you have now gone back to the room with 4 big doors on it.")
    position = fire_map[1][1]
    while(position != fire_map[0][1]):
        move = input("Which direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
        if(move == "L" and column > 0):
            column -= 1
        elif(move == "R" and column < len(fire_map[0]) - 1):
            column += 1
        elif(move == "D" and row > 0):
            row -= 1
        elif(move == "U" and row < len(fire_map) - 1):
            row += 1
        position = fire_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game2()
    print("You have completed puzzle 1 and 2 and you have now gone back to the place with 4 big doors in it.")
    position = fire_map[1][1] 
    while(position != fire_map[2][1]):
        move = input("Which direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
        if(move == "L" and column > 0):
            column -= 1 
        elif(move == "R" and column < len(fire_map[0]) - 1):
            column += 1
        elif(move == "D" and row > 0):
            row -= 1
        elif(move == "U" and row < len(fire_map) - 1): 
            row += 1
        position = fire_map[row][column]
        print("\nYou are now at The", position, "n")
    game3()
    
def water_map(wkey, row=1, column=1):
    water_map =[['Nothing is here', 'A blue gate with a big number 3 on it.', 'Nothing is here.']
              ['A blue gate with a big number 4 on it.', 'Main area.', 'A blue gate with a big number 1 on it']
              ['Unavailable to go here', 'A blue with a big number 2 on it.', 'Nothing is here']]
    position = water_map[row][column]
    while(position != water_map[2][1]):
        move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
        if(move == "L" and column > 0):
            column -= 1
        elif(move == "R" and column < len(water_map[0] - 1)):
            column += 1
        elif(move == "D" and row > 0):
            row += 1
        elif(move == "U" and row < len(water_map) - 1):
            row += 1
        position = water_map[row][column]
        print("\nYou are now at" , position, "\n")
    game1()
    print("You have completed puzzle 1 and you have now gone back to the room with 4 big doors on it.")
    position = water_map[1][1] 
    while(position != water_map[1][2]):
        move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
        if(move == "L" and column > 0):
            column -= 1
        elif(move == "R" and column < len(water_map[0]) - 1):
            column += 1
        elif(move == "D" and row > 0):
            row -= 1
        elif(move == "U" and row <len(water_map) - 1):
            row += 1
        position = water_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game2()
    print("You have completed puzzle 1 and 2 and you have now gone back to the place with 4 big doors in it.") 
    position = water_map[0][0] 
    while(position != water_map[0][1]):
        move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
        if(move == "L" and column > 0):
            column -= 1
        elif(move == "R" and column < len(water_map[0]) - 1):
            column += 1
        elif(move == "D" and row > 0):
            row -= 1
        elif(move == "U" and row < len(water_map) - 1):
            row += 1
        position = water_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game3()
    
def ground_map(gkey, row=1, column=1):
    ground_map =[['Nothing is here', 'A brown gate with a big number 4 on it.', 'Nothing is here.']
              ['A brown gate with a big number 2 on it.', 'Main area.', 'A brown gate with a big number 3 on it']
              ['Unavailable to go here', 'A brown with a big number 1 on it.', 'Nothing is here']]
    position = ground_map[row][column]
    while(position != ground_map[1][2]):
        try: 
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(ground_map[0]) - 1):
                column += 1
            elif(move == "D" and row > 0):
                row -= 1 
            elif(move == "U" and row < len(ground_map) - 1):
                row += 1
        except ValueError:
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = ground_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game1()
    print("You have completed puzzle 1 and you have now gone back to the place with 4 big doors in it.")
    position = ground_map[1][1]
    while(position != ground_map[0][1]):
        try:
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(ground_map[0]) - 1):
               column += 1
            elif(move == "D" and row > 0):
                row -= 1
            elif(move == "U" and row < len(ground_map) - 1):
                row += 1
        except ValueError:
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = ground_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game2()
    print("You have completed puzzles 1 and 2 and you have now gone back to the place with 4 big doors in it.")
    position = ground_map[1][1]
    while(position != ground_map[2][1]):
        try: 
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(ground_map[0]) - 1):
                column += 1
            elif(move == "D" and row > 0):
                row -= 1
            elif(move == "U" and row < len(ground_map) - 1):
                row += 1
        except ValueError:
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = ground_map[row][column]
        print("\nYou are now at The" , position , "\n")
    game3()
    print("You have completed all the puzzles and you have now gone back to the place with 4 big doors in it. What could the last door be?")
    position = ground_map[1][1]
    while(position != ground_map[0][1]):
        try:
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(ground_map[0]) - 1):
                column += 1
            elif(move == "D" and row > 0):
                row -= 1
            elif(move == "U" and row < len(ground_map) - 1):
                row += 1
        except ValueError:
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = ground_map[row][column]
        print("\nYou are now at The", position, "\n")
    gate4()
    
def sky_map (akey, row=1, column=1):
    print("You use your key and are able to go through the gate with a cloud on it. You enter another blue room filled with clouds. Around the room, there are 4 more gates each with a big number on it.")
    sky_map =[['Nothing is here', 'A white gate with a big number 3 on it.', 'Nothing is here.']
              ['A white gate with a big number 1 on it.', 'Main area.', 'A gate with a big number 2 on it']
              ['Nothing to go here', 'Gate with a big number 4 on it.', 'Nothing is here']]
    position = sky_map[row][column]
    while(position != sky_map[1][0]):
        try: 
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(sky_map[0]) - 1):
                column += 1
            elif(move == "D" and row > 0):
                row -= 1 
            elif(move == "U" and row < len(sky_map) - 1):
                row += 1
        except ValueError:
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = sky_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game1()
    print("You have completed puzzle 1 and you have now gone back to the room with 4 big doors on it.")
    position = sky_map[1][1]
    while(position != sky_map[1][2]):
        try: 
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper()
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(sky_map[0]) - 1):
                column += 1
            elif(move == "D" and row > 0):
                row -= 1 
            elif(move == "U" and row < len(sky_map) - 1):
                row += 1
        except ValueError:
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = sky_map[row][column]
        print("\nYou are now at The" , position, "\n")
    game2()
    print("You have completed puzzle 1 and 2 and you have now gone back to the room with 4 big doors in it.")
    position = sky_map[1][1] 
    while(position != sky_map[0][1]):
        try: 
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(sky_map[0]) - 1):
                column += 1
            elif(move == "R" and row > 0):
                row -= 1
            elif(move == "U" and row < len(sky_map) - 1):
                row += 1
        except ValueError: 
            print("Input a valid letter.")
            input("Press enter to continue.")
        position = sky_map[row][column]
        print("\nYou are now at The" , position, "\n") 
    game3()
    print("You have completed the last puzzle, and have now gone back to the room with 4 big doors in it. What could the last door be?")
    position = sky_map[0][1]
    while(position != sky_map[2][1]):
        try:
            move = input("What direction do you want to go? ('l' for left, 'r' for right, 'u' for up, 'd' for down)").upper
            if(move == "L" and column > 0):
                column -= 1
            elif(move == "R" and column < len(sky_map[0]) - 1):
                column += 1
            elif(move == "R" and row > 0):
                row -= 1
            elif(move == "U" and row <len(sky_map) - 1):
                row += 1
        except ValueError: 
            print("Input a valid letter")
            input("Press enter to continue.")
        position = sky_map[row][column]
        print("\nYou are now at The" , position, "\n") 
    gate4()


def dream_map(move, row, column, akey, gkey=0, wkey=0, fkey=0):
    dream_map = [['There is nothing here.', 'A white gate with a cloud engraved in it.', 'There is nothing here.'],
                 ['Gate to fire place', 'Main area', 'Gate to water place'],
                 ['There is nothing here.', 'Gate to ground place' , 'There is nothing here.']]
    finish = 0
    while(finish != 1):
        position = dream_map[row][column]
        if (move == "L" and column > 0):
            column -= 1
        elif(move == "R" and column < len(dream_map[0]) - 1):
            column += 1
        elif(move == "D" and row > 0):
            row -= 1 
        elif(move == "U" and row < len(dream_map) - 1):
            row += 1
        position = dream_map[row][column]
        print("\nYou are now at The" , position, "\n")
        if (position == dream_map[0][1] or position == dream_map[1][0] or position == dream_map[1][2] or position == dream_map[2][1] ):
            print("You are now at a gate and you try to unlock it.")
            if (position == dream_map[0][1] and akey == 1):
                sky_map(akey)
                akey = 0
                gkey = 1
            elif (position == dream_map[1][2] and gkey == 1):
                ground_map(gkey)
                gkey = 0
                wkey = 1
            elif (position == dream_map[2][1] and wkey == 1):
                water_map(wkey)
                wkey = 0
                fkey = 1
            elif (position == dream_map[0][1] and fkey == 1):
                fire_map(fkey)
                fkey = 0
                finish = 1
            else:
                print("This gate is locked. It seems like you need another key to access this place.") 
    return
def game3(num):
    print("This is the thrid puzzle game. In this game, you have to decode the numbers to make a word.\n You can have one hint per code. Please input your number in all lowercase.")
    if (num == 1): 
        answer = "oxygen"
        print("The number you have to decode is: 15.24.25.7.5.14")
        guess = input("What do you think the word is: ")
        d = 0
        while (answer != guess):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?")
            else: 
                guess = input("Your guess is incorrect, guess again: ")
            if (guess_hint == "h"):
                print("This is the only hint: It is the second most abundant element in the Earth's atmosphere.")
                d += 1
        print("Your answer is the correct word: oxygen.")
    if (num == 2):
        answer = "gravel"
        print("The number you have to decode is: 20.9.1.5.22.15")
        guess = input("What do you think the word is: ")
        d = 0
        while (answer != guess):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?")
            else:
                guess = input("Your guess is incorrect, guess agian: ")
            if (guess_hint == "h"):
                print("This is the only hint: It is made up of a variety of large rocks and once truckload costs anywhere from 25-100 million rocks")
                d += 1
        print("Your answer is the correct word: gravell.")
    if (num == 3):
        answer = "lagoon"
        print("The number you have to decode is: 11.0.6.14.14.13")
        guess = input("What do you think the word is: ")
        d = 0
        while (answer != guess):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?")
            else: 
                guess = input("Your guess is incorrect, guess again: ")
            if (guess_hint == "h"):
                print("This is the only hint: The word word relates to water, and it has two vowels. One vowel is repeated.")
                d += 1
        print("Your answer is the correct word: lagoon.")
    if (num == 3):
        answer = "blaze"
        print("The number you have to decode is: 98.108.97.122.101")
        guess = input("What do you think the word is: ")
        d = 0
        while (answer != guess):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?")
            else: 
                guess = input("Your guess is incorrect, guess again: ")
            if (guess_hint == "h"):
                print("This is the only hint: The word starts with a b and is a synonym of 'on fire.")
                d += 1
        print("Your answer is the correct word: blaze.")

def game2(num):
    print("This is the second puzzle game. In this game, you have to unscramble to clever anagram. This means that you have to unscramble a word or two to make another word or two.\n You can have one hint per anagram. Please input your answer in all lowercase letters.")
    if(num == 1):
        anagram = "dirty room"
        print("The anagram you have to unscramble is: \"dormitory\"")
        guess = input("Input your guess: ").lower()
        d = 0
        while (guess != anagram):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?").lower()
            else: 
                guess = input(("Your guess is incorrect, guess again: ")).lower()
            if (guess_hint == "h"):
                print("This is the only hint: It is two words and it describes a room.")
                d += 1
        if (guess == anagram):
            print("Your anagram is correct.")
    if (num == 2):
        anagram = "elegant man"
        print("The anagram you have to unscramble is: \"a gentleman\"")
        guess = input("Input your guess: ").lower()
        d = 0
        while (guess != anagram):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?").lower()
            else: 
                guess = input(("Your guess is incorrect, guess again: ")).lower()
            if (guess_hint == "h"):
                print("This is the only hint: Adjective for a gentleman + \"man\"")
                d += 1
        if (guess == anagram):
            print("Your anagram is correct.")
    if (num == 3):
        anagram = "detect thieves"
        print("The anagram you have to unscramble is: \"the detectives\"")
        guess = input("Input your guess: ").lower()
        d = 0
        while (guess != anagram):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?").lower()
            else: 
                guess = input(("Your guess is incorrect, guess again: ")).lower()
            if (guess_hint == "h"):
                print("This is the only hint: It is two words and is what a detective can detect.")
                d += 1
        if (guess == anagram):
            print("Your anagram is correct.")
    if (num == 4): 
        anagram = "twelve plus one"
        print("The anagram you have to unscramble is: \"eleven plus two\"")
        guess = input("Input your guess: ").lower()
        d = 0
        while (guess != anagram):
            if (d == 0):
                guess_hint = input("Your guess is incorrect. Do you want a hint (h) or guess (g)?").lower()
            else: 
                guess = input(("Your guess is incorrect, guess again: ")).lower()
            if (guess_hint == "h"):
                print("This is the only hint: It is three words and is one way to say '11+2'")
                d += 1
            if (guess == anagram):
                print("Your anagram is correct.")
def game1():
    print("In this game you have to guess a number between 1000 and 2000. Each round you will be able to pick if you want a hint or if you want to guess a number.")
    number = random.randint(1000, 2000)
    guess = int(input("Enter your first number: "))
    while(guess != number):
        print("Incorrect guess.")
        choice = input("Do you want to guess (g) or have hint (h)?").lower()
        hint_round = 0
        while(choice == "h"):
            if (hint_round >= 10): 
                print("You have ran out of hints.")
                break 
            if (number % 2 == 0 and hint_round == 0):
                print("The number is even.")
            elif (hint_round == 0): 
                print("The number is odd")
            elif (number % 3 == 0 and hint_round == 1):
                print("The number is divisible by 3.")
            elif (hint_round == 1): 
                print("The number is not divisible by 3.")
            elif (number % 5 == 0 and hint_round == 2):
                print("The number is divisible by 5.")
            elif (hint_round == 2): 
                print("The number is not divisible by 5.")
            elif (number >= 1776 and hint_round == 3):
                print("The number is greater than the year the United States gained independence from Britain.")
            elif (hint_round == 3): 
                print("The number is less than the year the United States gained independence from Britain.")
            elif (number <= 1500 and hint_round == 4):
                print("The number is less than the number 1500.")
            elif (hint_round == 4):
                print("The number is greater than the year 1500.")
            elif (number <= 100*10 and hint_round == 5):
                print("The number is less than 100*10.")
            elif (hint_round == 5):
                print ("The number is greater than 100*10")
            elif (number % 10 != 0 and hint_round == 6):
                print("The number is not divisible by 10.")
            elif (hint_round == 6):
                print ("The number is divisible by 10.")
            elif (number >= 1492 and number <= 1776 and hint_round == 7):
                print("The number is between the years Columbus reached the United States and when the United States declared independence.")
            elif (hint_round == 7):
                print ("The number is not between the yars Columbus reached the United States and when the United States declared independence.")
            elif (number >= 1914 and hint_round == 8):
                print("The number is greater than the first year of WW1.")
            elif (hint_round == 8):
                print("The number is less than the first year of WW1.")
            elif (ifprime(number) and hint_round == 9):
                print("The number is a prime number.")
            elif (hint_round == 9):
                print("The number is not a prime number.")

        hint_round += 1 
        if (hint_round <= 10):
            choice = input("Do you want to guess (g) or have a hint (h)?")

    while (choice == "g"):
        guess = int(input("Enter your guess: "))
        if (guess < number):
            print("Your guess is too low.")
            choice = input("Do you want to guess (G) or have a hint (H).")
        elif (guess > number): 
            print("Your guess is too high.") 
            choice = input("Do you want to guess (G) or have a hint (H).")
        else: 
            print("You guessed the correct number.")
            break
    
    def ifprime(n):
        if (number == 2 or number == 3):
            return True
        if (n % 2 == 0 or n < 2):
            return False 
            for i in range (3, int(n**0.5) + 1, 2):
                if (n % i == 0):
                    return False 
    
 #Main
town_r = 0
town_c = 1 
Intro()
while(town_r == 0 or town_r == 1 or town_c == 1 or town_c == 2):
    direction = input("Where do you want to go? ('l' for left, 'r' for right, 'u' for Up, and 'd' for Down)\n").lower()
    if (direction == "l"):
        town_c -= 1
    elif (direction == "r"):
        town_c += 1
    elif (direction == "d"):
        town_r -= 1
    elif (direction == "u"): 
        town_r += 1
    town_movement(direction, town_r, town_c)
man_conversation1()
air_key1 = 1 
town_r = 0
town_c = 1
dream_r = 1
dream_c = 1 
while(dream_r != 0): #fix this 
    direction1 = input("Where do you want to go? ('l' for left, 'r' for right, 'u' for Up, and 'd' for Down)\n")
    if (direction1 == "l"):
        dream_c -= 1
    elif (direction1 == "r"):
        dream_c += 1
    elif (direction1 == "d"):
        dream_r += 1
    elif(direction1 == "u"):
        town_r -= 1
    dream_map(direction1, dream_r, dream_c, air_key1)
while(town_r == 0 or town_r == 1 or town_c == 1 or town_c == 2):
    direction = input("Where do you want to go? ('l' for left, 'r' for right, 'u' for Up, and 'd' for Down)\n").lower()
    if (direction == "l"):
        town_c -= 1
    elif (direction == "r"):
        town_c += 1
    elif (direction == "d"):
        town_r -= 1
    elif (direction == "u"): 
        town_r += 1
    town_movement(direction, town_r, town_c)
man_conversation2() 
